//
// Created by Ei Ei Nyein on 12/31/2022.
//
#include "stdio.h"
#include "stdlib.h"

#define MAXOFSTACK 10 //size of data
int toCount=0;

struct stack{
    int data[MAXOFSTACK];
    int top;

};

typedef struct stack st;

int isStackIsFull(st *myStack){
    if(myStack->top == MAXOFSTACK-1){
        return 1;
    }
    else{
        return 0;
    }
}

int isStackIsEmpty(st *myStack){
    if(myStack->top== -1){
        return 1;
    }
    else{
        return 0;
    }
}

void creat_emptyStack(st *myStack){
    myStack->top=-1;
}

void pushToStack(st *myStack, int value){
    if(isStackIsFull(myStack)){
        printf("Stack is full!");
    }
    else{
        myStack->top++;
        myStack->data[myStack->top] = value;

    }
    toCount++;
    printf("push to stack number : %d => value is %d\n",toCount,value);
}

void popFromStack(st *myStack){
    if(isStackIsEmpty(myStack)){
        printf("Stack is Empty!");
    }
    else{
        printf("Pop from stack data is : %d\n",myStack->data[myStack->top]);
        myStack->top--;
    }

    toCount--;
}
int main(){

    st *myStack =(st*)malloc(sizeof(st));
    creat_emptyStack(myStack);

    pushToStack(myStack ,10);
    pushToStack(myStack ,20);
    pushToStack(myStack ,30);
    pushToStack(myStack ,40);
    //pushToStack(myStack ,50);

    popFromStack(myStack);
    popFromStack(myStack);
    popFromStack(myStack);
    popFromStack(myStack);
    popFromStack(myStack);

    return 0;
}
